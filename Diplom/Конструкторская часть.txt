- проектирование схемотехнических решений;
- проектирование алгоритмов микроконтроллера;
	- проектирование алгоритма системы управления движением со стабилизацией по курсу, траектории, скорости;
	- проектирование алгоритма системы управления «жестикуляцией» робота.

схемы:
сначала структурная вся и по частям
потом принципиальная вся и по частям
описать компоненты

сначала алгоритм из 2-х блоков
потом вся инициализация
потом главный цикл
потом автоматы и не очень

==Конструкторская часть==

===Проектирование схемотехнических решений===

Общая структурная схема андроидного робота представлена на рисунке 1. Как можно видеть из этой схемы, робот состоит из модулей, связанных между собой различными интерфейсами связи, такими как: I2C (связь гироскопа и МК), RS485, UART, USB, HDMI, Bluetooth, и т.д..

[[Структурная_схема_робота.png]]

Согласно цели работы и данной структурной схемы необходимо разработать следующие блоки:
а) подсистема управления движением рук;
б) подсистема управления движением ног;
в) подсистема управления движением головы;
г) подсистема управления движением захватов кистей;
д) подсистема сбора информации с датчиков растояния;
е) подсистема управления курсом с помощью гироскопа;
ж) подсистема управления питанием бортовой ЭВМ;
з) подсистема управления устройствами ЧМИ.

=== Описание подсистемы управления движением рук ===

К функциям подсистемы управления движением рук относятся:
- поднять левую руку
- поднять правую руку
- опустить левую руку
- опустить правую руку

Аппаратное обеспечение
- микроконтроллер
- драйвер мотора левой руки
- драйвер мотора правой руки
- концевые выключатели левой руки
- концевые выключатели правой руки

Опишем подробнее вышеперечисленные функции.
Чтобы поднять левую руку, нужно выставить высокий уровень на входе драйвера двигателя постоянного тока, подать ШИМ сигнал на вход драйвера при незамкнутых концевых выключателях руки. Необходимо отметить, что для экономии входов микроконтроллера верхний и нижний уровень руки конролируется одним и тем же входом. Это требует выделения дополнительных состояний автомата управления движением рук.

Автомат состояний рук является конечным автоматом. В начале работы 
рук он находится в состоянии инициализации.

=== Описание подсистемы управления движением ног ===

К функциям подсистемы управления движением ног относятся:
- проехать вперед на Х метров
- остановиться
- проехать назад на Х метров

Аппаратное обеспечение
- микроконтроллер
- драйвер мотора левой ноги
- драйвер мотора правой ноги

Опишем вышеперечисленные функции подробнее.
Для подсистемы управления движением ног определены следующие команды:
- 20: вернуть состояние подсистемы;
- 21 L C: движение вперед на L метров курсом C;
- 22 L C: движение назад на L метров курсом C;
- 23 : остановка.

Пример обмена командами:

21 320 200 // движение вперед на 320 см курсом 200
           // относительно начального положения робота
legs_last_cmd: 21, state: 1 // ответ подсистемы
           // с последней командой и состоянием
20 // запрос состояния
legs_last_cmd: 20, avg_pwm: 120, state: 1, direction: 1, trg_course: 200, course: 202, tgr_distance: 320, distance: 140, lft_pwm: 90, rgt_pwm: 150

=== Описание подсистемы управления движением головы ===

Голова робота может двигаться в 2ух плоскостях. Для поворота в горизонтальной плоскости и для наклона головы используются серво-моторы.

К функциям подсистемы управления движением головы относятся:
- повернуть голову на Х градусов влево
- повернуть голову на Х градусов вправо
- наклонить голову на Х градусов вперед
- наклонить голову на Х градусов назад

Аппаратное обеспечение
- микроконтроллер
- серво-моторы
- интерфейсная шина I2C
- драйвер серво-моторов

=== Описание подсистемы управления движением захватов кистей ===

Для управления движением кистей рук используются серво-моторы.

К функциям подсистемы управления движением кистей рук относятся:
- сжать кисть левой руки
- сжать кисть правой руки
- отпустить кисть правой руки
- отпустить кисть левой руки

Аппаратное обеспечение
- микроконтроллер
- серво-моторы
- интерфейсная шина I2C
- драйвер серво-моторов

=== Описание подсистемы сбора информации с датчиков растояния ===

[[Датчики.png]]

Сбор информации с датчиков происходит по прерываниям. // дописать //

=== Описание подсистемы управления курсом с помощью гироскопа ===

Для сбора информации с гироскопа применяется шина I2C, и библиотека датчика GY_85. 
Сначала выполняется калибровка гироскопа, которая заключается в усреднении полученных значений для определения скорости дрейфа гироскопа.

[[Калибровка_гироскопа.png]]

Пример кода калибровки представлен ниже:
begin;

S = 0;
old_z = гироскоп(z);
for (i=0; i < 10; i++)
{
	задержка 0.3 сек;
	new_z = гироскоп(z);
	S = S + (new_z - old_z);
}
дрейф = S / 10;

end;

Важнейшим режимом регулирования является «Режим поддержания скорости». При данном режиме мы управляем скоростью перемещения АРК путем регулирования силы тока, подаваемой на ходовой двигатель.
Данный режим активен во время непосредственного движения по ровной местности, в гору и при спуске с горы, при условии, что угол склона не превышает критического значения, когда управление двигателем уже неэффективно.

[[Регулятор_движения_с_заданной_скоростью.png]]

На рисунке //каком то// отражено функционирование данного режима.
В режиме движения робота с заданной скоростью задействованы следующие сигналы и функции:
t – время в с
s – комплексная переменная
Vц(t) – целевая скорость АРК в м/с
ωц(t) – целевая скорость вращения колес АРК в оборотах/с
ωр(t) – реальная скорость вращения колес АРК в оборотах/с
ε(t) – ошибка управления в оборотах/с
u(t) – сигнал управляющий двигателем
uм(t) – сигнал, являющийся результатом работы обмотки двигателя
Кдв – коэффициент усиления двигателя
Тм – механическая постоянная времени
Тэ – электрическая постоянная времени
Wpid(s) – передаточная функция ПИД-регулятора, отвечающая за
управление двигателем
функция 1 – математическое преобразование Vц(t) в ωк(t)
функция 2 – ПИД регулятор, формирующий u(t) исходя из ошибки
управления ε
функция 3 – апериодическое звено, отражающее электромагнитные
процессы в роторе и статоре двигателя
функция 4 – апериодическое звено, отражающее механические процессы в ходовом двигателе и трансмиссии АРК
Управляющее воздействие Vц(t) поступает в функцию No1, где из м/с
преобразуется в ωк(t) обороты/с, что позволяет использовать естественные
для данного процесса сигналы и единицы измерения. 37
Из результирующего сигнала ωк(t) вычитается сигнал ωр(t), являющийся результатом предыдущего цикла регулирования. В результате формируется сигнал ε(t), представляющий собой ошибку управления.
Функция No2 является ПИД-регулятором. ПИД-регулятор, на базе ошибки управления, формирует управляющий сигнал u(t), который воздействует на двигатель АРК.
Функции No3 и No4 отображают работу электропривода, служащего двигателем АРК. Они представляют собой 2 апериодических звена, которые под действием u(t) вырабатывают сигнал ωр(t) отражающий изменение оборотов двигателя во времени.
Рассмотрим объект управления, в роли которого выступает электропривод, служащий АРК ходовым двигателем.
В упрощенной схеме мы можем приближенно представить его в виде 2х апериодических звеньев, одно из которых отражает работу электромагнитных полей, а второе – механическую составляющую двигателя. При подаче тока на двигатель, сперва происходят процессы, связанные с электромагнитной составляющей привода, и лишь затем вступает в дело механика, что отображено на рисунке 27:

[[Упрощенная_схема_электропривода.png]]

Кдв – коэффициент усиления двигателя
Тм – механическая постоянная времени
Тэ – электрическая постоянная времени
функция 1 – апериодическое звено, отражающее электромагнитные
процессы в роторе и статоре двигателя
функция 2 – апериодическое звено, отражающее механические процессы в двигателе
Рассмотрим представленные величины более подробно.
Коэффициент усиления двигателя Kдв определяет пропорциональность между скоростью вращения вала двигателя на холостых оборотах и поданным на вход напряжением. Таким образом он находится по формуле 10:

Скорость холостого хода ωхх в оборотах в секунду и Uн задаются в паспорте электродвигателя (номинальное рабочее напряжение). В том случае, если мы не знаем ωхх, она находится экспериментально. Для этого на двигатель подают максимальное напряжение и снимают скорость вращения вала датчиком.

[[График_апериодического_звена.png]]

Рисунок 28 – График апериодического звена [12]
Механическая постоянная времени Tм зависит, как следует, от инерции всех механических частей входящих в электропривод. Так как в большинстве случаев это не только детали самого электропривода, но и редуктор, внешняя нагрузка и т.д., то проще всего получит Тм экспериментальным способом.
 
Для этого на электропривод скачком подают максимальное напряжение, снимая при этом переходной процесс изменения скорости ω(t).
При этом получают график, показанный на рисунке 28.
По данному графику можно определить время регулирования tП, это время, когда отклонение от целевого значения не превышает 5%, и, как результат, переходной процесс можно считать оконченным.
Если считать влияние первого звена незначительным, в связи с тем, что в электроприводе с механической нагрузкой влияние Тэ, как правило в 10 раз меньше[7], то можно принять Tм как Т данного переходного процесса.
Учитывая, что T переходного процесса в 3 раза меньше tП[11], получим формулу 11:

[[Формула 11.png]]
 
Следовательно, если мы построим график переходного процесса, то сможем найти Тм.
Электрическая постоянная времени Тэ характеризует инерционность намагничивания якоря двигателя, и ее можно найти по формуле 12:

[[Формула 12.png]]

где Lя – это индуктивность якоря двигателя, а Rя – это его сопротивление, но в практических условиях измерить Lя бывает крайне сложно, тогда используется приближение, отраженное в формуле 13:

[[Формула 13.png]]

Передаточной же функцией, записанной, через оператор Лапласа, нашего объекта управления будет формула 14:

[[Формула 14.png]]

Следует учесть, что при регулировании нам будут нужны не только текущие показатели АРК, но также и показатели на предыдущем этапе регулирования.

=== Описание подсистемы управления питанием бортовой ЭВМ ===

[[Структурная схема питания ЭВМ]]

К функциям подсистемы управления питанием бортовой ЭВМ относятся:
- включить питание
- замкнуть кнопку включения питания ЭВМ

Аппаратное обеспечение
- микроконтроллер
- модули реле
- бортовая ЭВМ
- блок питания бортовой ЭВМ

При включении питания микроконтроллера после инициализации всех подключенных устройств, выставляется низкий уровень на выходе, отвечающем за подачу питания на бортовую ЭВМ (низкий уровень сигнала замыкает реле), и на 100 мс замыкается цепь кнопки включения бортовой ЭВМ.

=== Описание подсистемы управления устройствами ЧМИ ===

[[Структурная схема устройства ЧМИ]]

К устройствам ЧМИ относятся дисплей, камеры, микрофон, динамики.

К функциям подсистемы управления устройствами ЧМИ относятся:
- включить дисплей
- включить камеры
- включить микрофон
- включить динамики

Аппаратное обеспечение
- микроконтроллер
- модули реле
- камеры 
- микрофон
- дисплей
- динамики

В состав системы управления платформы-робота обычно входят датчики для получения данных об окружающей обстановке и препятствиях, которые представлены ультразвуковыми дальномероми, гироскопом, акселерометром и т.д.. Для нормализации сигналов с этих датчиков служат преобразователи, осуществляющие преобразование аналоговых сигналов в унифицированный сигнал.
Преобразование унифицированных сигналов выполняют входные порты МК. К портам МК подключаются аппаратные драйверы управления исполнительными двигателями, обеспечивающие согласование сигналов по уровню токов, и аппаратные и программные интерфейсы, обеспечивающие связь с бортовой ЭВМ.
Также существуют решения, не использующее МК, решающее задачу связи между датчиками и бортовой ЭВМ посредством преобразователей интерфейсов, являющееся альтернативным способом организации внутрисистемных интерфейсов.
В ходе проекта решена инженерная задача создания механических звеньев, обеспечивающих ожидаемые линейные скорости и ускорения, допустимые внешние нагрузки и режимы работы.
Функциональная особенность аппаратно-программного комплекса состоит в интеллектуализации управления движением за счет использования локальных и визуальных датчиков. Система имеет априорную информацию о среде и в процессе функционирования получает текущую информацию как о внешней среде, так и о собственном состоянии. Ее целью является принятие решений, связанных с анализом внешней среды.
На основе проведенного исследования предметной области и анализа наиболее часто используемых компонентов в системах такого рода был сделан вывод о допустимости и достаточности применения микроконтроллера в связке с ЭВМ.

[[Структурная_схема_робота.png]]

===Проектирование ПО микроконтроллера===

Ниже представлены автоматы и алгоритмы работы подсистем робота.

====Автомат рук====

[[Автомат_рук.png]]

Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "инициально опустить руки".При пребывании автомата в состоянии "инициально опустить руки" в момент времени 1 имея на входе воздействие "нажат к.в.", автомат сменит состояние на "остановка".При пребывании автомата в состоянии "начать движ. вниз" в момент времени 2 имея на входе воздействие "время больше 10 сек", автомат сменит состояние на "ошибка".При пребывании автомата в состоянии "начать движ. вниз" в момент времени 3 имея на входе воздействие "к.в. отпущен", автомат сменит состояние на "продолжить опускать руки".В момент времени 4 автомат перешел в состояние "продолжить опускать руки", и входное воздействие равно "время больше 10 сек", то он перейдет в состояние "ошибка".
Если в момент времени 5 автомат находится в состоянии "продолжить опускать руки" при входном воздействии "к.в. нажат", то он перейдёт в состояние "остановка".В момент времени 6 робот находится в состоянии "начать движ. вверх", и при входном воздействии "время > 10 сек", он переходит в состояние "ошибка".В момент времени 7 робот находится в состоянии "начать движ. вверх", и при входном воздействии "к.в. отпущен", он переходит в состояние "продолжить поднимать руки".Если в момент времени 8 автомат находится в состоянии "продолжить поднимать руки" при входном воздействии "время > 10 сек", то он перейдёт в состояние "ошибка".В момент времени 9 автомат перешел в состояние "продолжить поднимать руки", и входное воздействие равно "к.в. нажат", то он перейдет в состояние "остановка".
В момент 10 автомат пребывает в состоянии "остановка", и, получив воздействие "0", он перейдет в состояние "ожидание".При пребывании автомата в состоянии "ожидание" в момент времени 11 имея на входе воздействие "принята команда вниз", автомат сменит состояние на "начать движ. вниз".Если автомат в момент 12 находится в состоянии "ожидание", а входное воздействие равно "принята команда вверх", то следующее состояние будет равно "начать движ. вверх".

====Автомат_Голова====

[[Автомат_Голова.png]]

Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "установка в начальное положение".Если в момент времени 1 автомат находится в состоянии "установка в начальное положение" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "начальное положение установлено".При пребывании автомата в состоянии "начальное положение установлено" в момент времени 2 имея на входе воздействие "угол < требуемый", автомат сменит состояние на "поворот на Х градусов в горизонтальной плоскости".Если в момент времени 3 автомат находится в состоянии "начальное положение установлено" при входном воздействии "угол < требуемый", то он перейдёт в состояние "поворот на Х градусов в вертикальной плоскости".
В момент времени 4 робот находится в состоянии "поворот на Х градусов в горизонтальной плоскости", и при входном воздействии "требуемый угол достигнут", он переходит в состояние "поворот завершен".Если в момент времени 5 автомат находится в состоянии "поворот на Х градусов в вертикальной плоскости" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "поворот завершен".При пребывании автомата в состоянии "поворот на Х градусов в вертикальной плоскости" в момент времени 6 имея на входе воздействие "требуемый угол достигнут", автомат сменит состояние на "поворот завершен".Если в момент времени 7 автомат находится в состоянии "поворот на Х градусов в вертикальной плоскости" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "поворот завершен".
====Автомат_Комп====
[[ Автомат_Комп.png ]]
Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "компьютер выключен".В момент времени 1 автомат перешел в состояние "компьютер выключен", и входное воздействие равно "0", то он перейдет в состояние "компьютер включается".В момент 2 автомат пребывает в состоянии "компьютер включается", и, получив воздействие "0", он перейдет в состояние "компьютер загружается".В момент времени 3 робот находится в состоянии "компьютер загружается", и при входном воздействии "получено подтверждающая последовательность", он переходит в состояние "компьютер загрузился".Если автомат в момент 4 находится в состоянии "компьютер загружается", а входное воздействие равно "превышено время ожидания", то следующее состояние будет равно "компьютер не загрузился".

====Автомат_Лампы====
[[ Автомат_Лампы.png ]]
Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "выключить все лампы".В момент 1 автомат пребывает в состоянии "выключить все лампы", и, получив воздействие "получено подтверждение включения компьютера", он перейдет в состояние "включить белые лампы".В момент времени 2 робот находится в состоянии "выключить все лампы в качестве сигнала об ошибке", и при входном воздействии "не получено подтверждение включения компьютера за 10 сек.|счетчик включений < 5|счетчик времени включенных ламп < Х", он переходит в состояние "включить все лампы".В момент времени 3 автомат перешел в состояние "включить все лампы", и входное воздействие равно "счетчик времени выключенных ламп < Х", то он перейдет в состояние "выключить все лампы в качестве сигнала об ошибке".
При пребывании автомата в состоянии "включить все лампы" в момент времени 4 имея на входе воздействие "счетчик включений > 5", автомат сменит состояние на "выключить все лампы".При пребывании автомата в состоянии "выключить все лампы" в момент времени 5 имея на входе воздействие "поехали вперед", автомат сменит состояние на "включить белые лампы".Если автомат в момент 6 находится в состоянии "выключить все лампы", а входное воздействие равно "поехали назад", то следующее состояние будет равно "включить красные лампы".При пребывании автомата в состоянии "включить белые лампы" в момент времени 7 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".
При пребывании автомата в состоянии "включить красные лампы" в момент времени 8 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".При пребывании автомата в состоянии "выключить все лампы" в момент времени 9 имея на входе воздействие "поехали вперед направо", автомат сменит состояние на "включить белую лампу справа".При пребывании автомата в состоянии "выключить все лампы" в момент времени 10 имея на входе воздействие "поехали назад направо", автомат сменит состояние на "включить красную лампу справа".В момент 11 автомат пребывает в состоянии "выключить все лампы", и, получив воздействие "поехали вперед налево", он перейдет в состояние "включить белую лампу слева".
Если автомат в момент 12 находится в состоянии "выключить все лампы", а входное воздействие равно "поехали назад налево", то следующее состояние будет равно "включить красную лампу слева".При пребывании автомата в состоянии "включить белую лампу справа" в момент времени 13 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".В момент 14 автомат пребывает в состоянии "включить красную лампу справа", и, получив воздействие "остановились", он перейдет в состояние "выключить все лампы".

====Автомат_Обход препятствий====

[[Автомат_Обход_препятствий.png]]

Если автомат в момент 0 находится в состоянии "стоим", а входное воздействие равно "потребность", то следующее состояние будет равно "захотели ехать".Если автомат в момент 1 находится в состоянии "захотели ехать", а входное воздействие равно "нет_препятствий(прямо)", то следующее состояние будет равно "ехать прямо".В момент времени 2 робот находится в состоянии "захотели ехать", и при входном воздействии "нет препятствий справа", он переходит в состояние "ехать направо".Если автомат в момент 3 находится в состоянии "захотели ехать", а входное воздействие равно "нет препятствий слева", то следующее состояние будет равно "ехать налево".В момент 4 автомат пребывает в состоянии "ехать прямо", и, получив воздействие "нет препятствий справа", он перейдет в состояние "ехать направо".В момент 5 автомат пребывает в состоянии "ехать прямо", и, получив воздействие "нет препятствий слева", он перейдет в состояние "ехать налево".При пребывании автомата в состоянии "ехать направо" в момент времени 6 имея на входе воздействие "нет препятствий прямо", автомат сменит состояние на "ехать прямо".
Если в момент времени 7 автомат находится в состоянии "ехать налево" при входном воздействии "нет препятствий прямо", то он перейдёт в состояние "ехать прямо".

====Обработка датчиков расстояния====
[[Датчики.png]]

[[Обработка_датчиков_расстояния.png]]

Ветка ожидание:
Блок 1: проверка состояния датчика расстояния.
Входы: состояние датчика
Выходы: направление дальнейшей работы (ожидание, триггер, эхо).

Блок 2: проверка времени ожидания.
Входы: время ожидания t (mс).
Выходы: если t > 1000mc, то истина, иначе ложь

Блок 3: состояние датчика := триггер
Входы: переменная состояния
Выходы: состояние датчика

Ветка триггер:
Блок 4: проверка состояния триггера
Входы: состояние датчика
Выходы: фронт вниз; фронт вверх; ожидание;

Блок 5: проверка времени импульса
Входы: фронт вниз
Выходы: если время импульса больше 10 мс, то истина, иначе - ложь

Блок 6: выставить низкий уровень на выходе триггера
Входы: -
Выходы: состояние выхода триггера

Блок 7: состояние триггера := ожидание
Входы: -
Выходы: состояние триггера

Блок 8: состояние := эхо
Входы: -
Выходы: состояние датчика

Блок 9: выставить высокий уровень на выходе триггера
Входы: фронт вверх
Выходы: состояние выхода триггера

Блок 10: состояние триггера := фронт вниз
Входы: -
Выходы: состояние триггера

Блок 11: состояние триггера := фронт вверх
Входы: -
Выходы: состояние триггера

Ветка 3:
Блок 12: проверка состояния эхо
Входы: состояние датчика
Выходы: фронт вверх; фронт вниз; ожидание;

Блок 13: проверить уровень на входе эхо по фронту вверх
Входы: уровень
Выходы: если низкий, то истина, иначе - ложь

Блок 14: проверить уровень на входе эхо по фронту вниз
Входы: уровень
Выходы: если низкий, то истина, иначе - ложь

Блок 15: вычислить расстояние
Входы: длительность импульса
Выходы: расстояние

Блок 16: состояние эхо := фронт вниз
Входы: состояние эхо
Выходы: состояние эхо

Блок 17: запомнить момент прихода импульса
Входы: импульс
Выходы: время прихода импульса

Блок 18: состояние эхо := фронт вверх
Входы: состояние эхо
Выходы: состояние эхо

====Основной алгоритм программы микроконтроллера====

Блок 1: инициализация устройств и подсистем
Входы: -
Выходы: состояние портов ввода/вывода, вектора прерываний

Блок 2: основной управляющий алгоритм
Входы: состояние датчиков, команды о бортовой эвм
Выходы: управляющее воздействие, ответы о выполнении команд

====Инициализция устройств====

Блок 1:Инициализация последовательного порта
Входы: - 
Выходы: состояние последовательного порта (RX/TX), прерывания

Блок 2: Инициализация реле компьютера
Входы: -
Выходы: состояния пинов реле

Блок 3: Инициализация светотехники
Входы: -
Выходы: состояние пинов реле светотехники

Блок 4: Инициализация шины I2C 
Входы: -
Выходы: состояние шины I2C

Блок 5: Инициализация сети 5V
Входы:
Выходы: состояние пинов реле цепи 5V

Блок 6: Инициализация реле моторов и их включение
Входы:
Выходы: состояние пинов драйверов моторов

Блок 7: Инициализация таймеров
Входы:
Выходы: состояние регистров таймеров

Блок 8: Инициализация портов
Входы:
Выходы: состояние портов

Блок 9: Инициализация АЦП
Входы:
Выходы: состояние регистров АЦП

==== Обработчик прерывания по первому таймеру ====

Блок 1: Сброс счетчика регистра прерываний
Входы: Счетчик
Выходы: Счетчик = 0

Блок 2: Обработка команд управления компьютером
Входы: Команда
Выходы:	Результат выполнения

Блок 3: Обработка команд управления светотехникой
Входы: Команда
Выходы:	Результат выполнения

Блок 4: Обработка команд управления руками
Входы: Команда
Выходы:	Результат выполнения

Блок 5: Обработка команд управления ногами
Входы: Команда
Выходы:	Результат выполнения

[[Обработчик_прерывания_по_первому_таймеру.png]]

==== Обработчик прерывания по второму таймеру ====

Блок 1: Сброс счетчика регистра прерываний
Входы: Счетчик
Выходы: Счетчик = 0

Блок 2: Счетчик импульсов датчиков расстояния += 1
Входы: Счетчик
Выходы: Значение счетчика, увеличенное на единицу

Блок 3: Обработка команд управления датчиками расстояния
Входы: Команда
Выходы:	Результат выполнения

[[Обработчик_прерывания_повторому_таймеру.png]]

==== Инициализация гироскопа (рассчет дрейфа) ====

Блок 1: Инициализация
Входы: Переменная суммы значений
Выходы: Переменная суммы значений

Блок 2: первичное измерение вращательного ускорения по оси z
Входы: переменная для хранения
Выходы: измеренное значение

Блок 3: инициализация цикла
Входы: переменная счетчик цикла
Выходы:	-

Блок 4: задержка 0.3 сек
Входы: 
Выходы:

Блок 5: новое измерение ускорения по z
Входы: переменная для хранения значения
Выходы: значение

Блок 6: подсчет суммы измерений
Входы: переменная суммы
Выходы: значение суммы

Блок 7: конец цикла
Входы: -
Выходы: переменная счетчик

Блок 8: подсчет дрейфа
Входы: переменная для хранения значения дрейфа
Выходы: значение дрейфа

====Вывод====
// написать