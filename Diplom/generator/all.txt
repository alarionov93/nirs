


**Реферат**

Разработка аппаратного и программного обеспечения системы управления исполнительными механизмами андроидного робота

Предполагается:

а) разработка схемотехнических решений
б) разработка ПО микроконтроллера
в) разработка ПО бортовой ЭВМ робота.

Функции:

а) управление движением со стабилизацией по курсу, траектории, скорости.
б) управление питанием бортового оборудования с контролем целостности цепей питания и управления
в) управление «жестикуляцией» робота.

Собранное шасси «робота-референта» (на базе Промобота). Возможность управления им с ПК, пульта.

**Определения и сокращения**
ИМ - исполнительные механизмы
БИНС - бесплатформенная инерциальная навигационная система
ИМС - интегрированная микросхема
МК - микроконтроллер
СТЗ - система технического зрения
АРК - андроидный роботизированный комплекс
АС - автоматизированные системы
НСД - несанкционированный доступ
РД - руководящий документ
СЗИ - система защиты информации
СЗИ НСД - система защиты информации от несанкционированного доступа


**Введение**

В наши дни тема взаимодействия робота и человека становится все более актуальной. Многие предприятия и заводы едва ли можно представить без использования робототехники. В настоящее время робототехника завоевывает все большие отрасли промышленности и все плотнее внедряется в различные сферы человеческой жизни. И если раньше роботы могли исполнять некоторые функции человека, заменяя его на заводах, где часто требуются однообразные действия при конвейерном производстве, при производстве разнообразных механизмов, то теперь наступили времена, когда роботы способны выполнять всё более сложные задачи. Развивается наука, развивается и техника, следуя за прогрессом.

Также в настоящее время роботы активно внедряются в образовательную и выставочную деятельность. Особое внимание привлекают роботы андроидного типа или антропоморфные роботы, имитирующие поведение человека. В связи с этим ставится вопрос об использовании роботов этого типа для привлечения внимания и выполнения задач их прямого назначения. Данное исследование посвящено разработке робота андроидного типа.

Актуальность темы исследования. В условиях развития информационных ресурсов одним из ключевых направлений современной компьютерной науки является разработка роботов. Процесс решения данных прикладных задач подразумевает, как правило, использование современных методов построения такого рода систем. Управление исполнительными механизмами современного роботизированного комплекса невозможно без применения методов искусственного интеллекта. К таким методам относятся: теория автоматов, нечеткая логика, встраиваемые системы, прикладная лингвистика. 

Научная новизна исследования заключается в следующем:
Создан программный комплекс для управления исполнительными механизмами андроидного робота. Функционал системы позволяет осуществлять упарвление и мониторинг состояния подсистем, входящих в аппаратное и программное обеспечение робота. Особенности модульной архитектуры позволяют гибко интегрировать программный комплекс в разрабатываемую систему. В целях осуществления обмена данных в программном комплексе предусмотрены интерфейсы связи между компонентами.

Практическая значимость 
Практическая значимость заключается в создании схемотехнических решений, позволяющих реализовать систему управления автономно передвигающимся андроидным роботом, способным к имитации отдельных человеческих жестов, таких как: движение рук, кистей, головы в двух плоскостях. А также практическая значимость заключается в наделении робота способностью показывать своё "эмоциональное состояние" при помощи дисплея, а намерения передвижения при помощи светотехники.

Объектом настоящего исследования является программное и аппаратное обеспечение робота.
Предметом исследования являются методы и алгоритмы, используемые в программном и аппаратном обеспечении робота.

Целью настоящей работы является разработка аппаратного и программного обеспечения системы управления исполнительными механизмами андроидного робота. Для достижения поставленной цели необходимо сформулировать и решить следующие задачи:
- исследование предметной области;
- разработка схемотехнических решений;
- разработка ПО микроконтроллера;
- разработка ПО бортовой ЭВМ робота;
- разработка системы управления движением со стабилизацией по курсу, траектории, скорости;
- разработка системы управления «жестикуляцией» робота.

==Исследовательская часть==
===Исследование существующих подходов к управлению ИМ робота===

Проектирование и разработка андроидных роботов широко практикуется в настоящее время. Обратимся к литературе на данную тематику.
В статье [1] представлена разработка аппаратно-программного комплекса для управления робототехнической платформой и программноалгоритмического обеспечения для автономного движения и бесконтактного управления робототехнической платформой.
В ходе тестирования представленной в этой статье платформы была решена задача обработки данных с камеры Kinect и распознавания жестов оператора, отлажена передача данных на микроконтроллер Arduino Mega2560, разработана программа управления по передвижению робототехнической платформы в необходимых направлениях, апробированы модули ввода данных с датчиков.
Экспериментально подтверждено, что робототехническая платформа выполняет движения в необходимых направлениях с учетом локальных препятствий в режиме реального времени, на основе данных, получаемых с датчиков.
В статье [2] описано создание кисти-манипулятора для андроидного робота. В робототехнике широкое распространение получили клешни для захвата различных предметов. Клешня состоит из двух направляющих, при сближении которых и происходит удержание предмета. Движения направляющих происходит с помощью сервоприводов.
На сегодняшний день большое распространение получили роботы-андроиды. Но практическое применение может иметь и рука (кисть руки) робота отдельно - в качестве протеза для инвалидов. Кисть используют в медицинской технике, в частности области медицинских средств реабилитации двигательного аппарата человека. Цель - повышение степени приспосабливания при захвате предметов. Пальца кисти андроида могут быть использованы для жестикуляции в развлекательных целях и для рекламы.
В статье [3] рассмотрены перспективы развития мобильных робототехнических комплексов. Автор описывает что в настоящее время в мире наблюдается широкое распространение роботизированных систем и робототехники в целом. Во многих странах, в том числе и в Казахстане, робототехника является уже отдельной дисциплиной изучаемой в учебных заведениях, и не только в профильных вузах, но и в школах, и, соответственно, в педагогических вузах.
Востребованность специалистов, обладающих знаниями в этой области,ежегодно растет. Это обусловлено многими объективными факторами, решающим из которых, конечно же, является бурное развитие робототехники.
Сферы применения роботов и робототехники различны: образование, медицина, строительство, геодезия, метеорология и т.д.
Особое значение, так же занимает развитие так называемой, автономной и мобильной робототехники. В силу того, что робототехника зачастую применяется для выполнения работ в недоступных человеку местах, то именно мобильная робототехника часто является приоритетом. Однако, не только в перечисленных выше случаях требуется мобильная робототехника, определенной ветвью ее развития является автономная робототехника, подразумевающая практически полное исключение вмешательства человеческой деятельности для выполнения каких-либо задач. Иными словами, такая робототехника является наиболее перспективной и интересной в плане разработки. Для осуществления автономности, в мобильной робототехнике, все чаще применяется искусственный интеллект, а точнее его элементы. С развитием облачных технологий, стоит обратить внимание, на интеграцию и объединение различных по мощности вычислительных мощностей и сервисов искусственного интеллекта, для полномасштабной реализации полной мобилизации и автономности робототехники.
В статье [4] рассмотрена еще одна интересующая нас в рамках НИР область - системы технического зрения. Применение систем технического зрения (СТЗ) позволяет выполнять обнаружение и распознавание объектов окружающей среды, производить анализ ряда их характеристик. Поэтому включение СТЗ в состав робототехнических систем стало признанной тенденцией их развития.
СТЗ в составе робототехнической системы могут быть использованы для решения следующих задач:
обнаружение объектов;
определение формы объектов;
распознавание и классификация объектов; выделение изображений;
распознавание и классификация изображений. Указанные задачи в той или иной степени
могут быть решены с использованием одной СТЗ или совокупности СТЗ, в т. ч., основанных на различных физических принципах. Для решения задачи планирования траектории движения наиболее часто применяются СТЗ, построенные по принципу восприятия отражённого от объектов сигнала (инфракрасного или ультразвукового спектра), т. е., СТЗ радарного типа, сканирующие окружающее пространство. Для распознавания изображений необходимы СТЗ, позволяющие получить растровое представление сцены.
Применение таких СТЗ как видеокамеры, при соответствующей обработке данных позволяет решить как задачу планирования траектории, так и задачу распознавания, однако обработка растровых изображений требует больших вычислительных ресурсов и применения мощных вычислителей или специализированных сигнальных процессоров. Одной из основных проблем обработки и анализа изображений является неопределённость и неоднозначность их характеристик в связи с непостоянством освещённости, изменением цветовых характеристик и расположения объектов на фоне; кроме того, в ряде случаев применение аналитических методов обработки изображений во встраиваемых системах затруднено или невозможно по причине сложности используемого математического аппарата и, следовательно, ресурсоёмкости этих методов, из-за чего представляет интерес применение в таких задачах методов и средств интеллектуальной обработки данных (в частности, аппарата нечётких вычислений), эффективно решающих эти задачи при существенных ограничениях на вычислительные ресурсы. Отметим, что методы нечёткой обработки позволяют оперировать такими естественными параметрами описания изображений, как яркость, однородность, близость участков и др., а также обладают простотой модификации, предсказуемостью и объяснимостью поведения.
Обобщенная структура использования средств нечётких вычислений в задачах обработки изображения показана на рис. 1.
Существующие СТЗ коммерческого назначения и средства их разработки являются закрытыми и непригодными для исследований принципов построения СТЗ, создания новых методов и алгоритмов их функционирования. Таким образом, актуальна задача разработки открытых средств проектирования встраиваемых СТЗ, позволяющих выполнять научные исследования и проводить подготовку специалистов в области автоматики и вычислительной техники.
В свою очередь, в статье [5] рассмотрена система управления движением автономной колесной платформы. В статье описан состав аппаратной и программной частей платформы и даны основные принципы проектирования таких устройств. Рассмотрим состав системы управления движением платформы подробнее: выбор направления движения аппарата осуществляет связка из нейронной сети (определяющей, в каком направлении находится маркер, обозначающий конечную точку маршрута) и системы нечеткой логики, выбирающей направление движения аппарата на основе данных нейронной сети и датчиков расстояния до препятствий. Выбранное направление движения преобразуется в команды и передается в систему управления движением. Система включает в себя микроконтроллер ArduinoDuemilanove на основе ATMega 328. Для управления работой двигателей предназначен силовой модуль расширения Ardumoto L298P MotorDriverShield. На модуле расширения для дополнительного прототипирования установлен модуль датчиков, оборудованный магнетометром и акселерометром. Кроме того, именно к этому модулю подключены ультразвуковые датчики расстояния, оценивающие расстояние до препятствий перед платформой слева и справа по направлению движения. По центру платформы в передней части расположен инфракрасный датчик препятствий, выдающий сигнал в случае, если препятствие находится прямо перед платформой на расстоянии 800 мм и менее.
Программное обеспечение микроконтроллера.
Движением аппарата управляет микроконтроллер, микропрограмма которого включает в себя блок инициализации, в котором производится настройка датчиков, а также основной цикл, в котором последовательно производится опрос датчиков аппарата, определение возможности движения в данный момент, остановка движения в случае наличия препятствия в непосредственной близости, передача телеметрической информации в бортовой компьютер, а также
прием и анализ команд, поступивших от бортового компьютера.
Одним из важнейших требований к программному обеспечению микроконтроллера являлась высокая надежность работы и устойчивость к возникновению прерываний и сбоев в канале передаче данных между бортовым компьютером и микроконтроллером. Исходя из этих требований, для реализации программного обеспечения микроконтроллера была выбрана концепция автоматного программирования. Часть программного кода, ответственная за командноинформационный обмен с бортовым компьютером, представляет собой конечный частично определенный детерминированный автомат-распознаватель. Автомат содержит 13 состояний и 26 переходов между ними. Прием числовых данных реализован отдельной процедурой, причем возникновение ошибки в ходе приема информации немедленно переводит автомат в исходное состояние, что обеспечивает высокую устойчивость системы к ошибкам и сбоям. Программное обеспечение на стороне бортового компьютера, принимающее телеметрические данные от микроконтроллера, реализовано по такому же принципу. Таким образом, сбой работы микроконтроллера так же не приводит к прекращению обменом информацией между бортовым компьютером и управляющим микроконтроллером или зависанию программы. Для возобновления нормального функционирования системы достаточно перезагрузить микроконтроллер либо бортовой компьютер, других специальных шагов предпринимать не требуется.

===Исследование шасси "Промобота"===
В основе робота было использовано уже имеющееся шасси, представляющее из себя набор исполнительных механизмов и датчиков перечень которых приведен в таблице /таблица промобот/

/таблица промобот/

№ п/п ; Наименование прибора 		; Назначение прибора ; Характеристики ;
1	  ; Привод правого колеса 		; Перемещение робота ; 12V 10A	DC 1шт.;
2	  ; Привод левого колеса 		; Перемещение робота ; 12V 10A	DC 1шт.;
3	  ; Привод правой руки	 		; "Жестикуляция" робота ; 12V 10A	DC 1шт.;
4	  ; Привод левой руки	 		; "Жестикуляция" робота ; 12V 10A	DC 1шт.;
5	  ; Привод поворота головы 		; "Жестикуляция" робота ; Серво 5V 2А PWM 1шт.;
6 	  ; Ультразвуковые датчики расстояния ; Обнаружение препятствий ; 10 - 200см 8шт.;
7 	  ; Инфракрасные датчики расстояния ; Обнаружение препятствий ; неисправны 6шт.;
8 	  ; Модуль датчика напряжения питания ; Контроль напряжения бортовой сети ; Аналоговый;
9 	  ; Аккустический усилитель ; Усиление аудио частот ; Аналоговый;
10 	  ; Динамики ; Воспроизведение звука ; 4 Ом;
11 	  ; WiFi-адаптер ; Связь с интернетом ; 2.4Ггц;
12 	  ; Arduino Uno R3 ; Управление ИМ ; Atmega 328 P;
13 	  ; Драйверы управления двигателями постоянного тока; Управление двигателями ; 12V, 20А, 2-канальный, цифровое управление, 2шт.;
14 	  ; Материнская плата ; Организация вычислительного процесса ; Core i7, SSD;
15 	  ; LED-матрица ; "глаза" робота ; RGB, 5V, цифровое управление;
16 	  ; Блок питания ; Питание ; 12V 20А;
17 	  ; Камера ; Обнаружение человека ; Веб, 640x480;
18	  ; Концевые выключатели рук ; Определение границ перемещения рук ; 2 контакта;

Рассмотрим подробнее вышеприведенную таблицу. Все устройства работают под управлением бортовой ЭВМ (строки 14, 16). Взаимодействие компьютера и ИМ осуществляется посредством микроконтроллера Arduino (строка 12). Управление двигателями (строки 1-4) происходит посредством драйверов управления двигателями (строка 13), и инерфейсов связи между ними. Для связи с сетью используется WiFi адаптер(строка 11). Звуки воспроизводятся по команде с ЭВМ с помощью динамиков и усилителя (строки 9, 10). Для ориентации в пространстве используются датчики расстояния (строки 6, 7). Для контроля напряжения бортовой сети используется вольтметр (строка 8). Для имитирования эмоций используются LED-матрицы (строка 15). Для определения границ перемещения рук используются концевые выключатели (строка 18). Для обнаружения людей используется веб-камера (строка 17). И наконец, для поворота головы используется серво-мотор (строка 5).

Требования к шасси робота сформулированы в таблице /таблица требования/.

Для удовлетворения требований, предъявляемых к роботу, в конструкции отсутствуют следующие элементы:
1. БИНС. Необходима для стабилизации курса робота.
2. Серво-привод наклона головы. Нужен для расширения возможностей эмоционального взаимодействия с человеком.
3. Серво-приводы кистей рук. Также необходимы для расширения возможностей эмоционального взаимодействия с человеком.
4. Дисплей. Служит также для расширения возможностей эмоционального взаимодействия с человеком.
5. Датчики расстояния. Должны быть заменены для соответствия заявленным требованиям по ориентированию робота.
6. Реле. Должны быть использованы для корректного управления цепями нагрузки.

Анализ требований показывает, что имеющиееся аппаратное обеспечение нуждается в доработке. Для выполнения реинжинирига робота необходимо произвести анализ доступных на рынке модулей и компонентов, которые могут быть использованы для сборки робота.

/таблица требования/ 

===Исследование существующего аппаратного обеспечения===

Рассмотрим подробнее список дополнительных модулей и элементов.
1. БИНС.
Для того, чтобы робот мог стабилизировать курс, необходимо, чтобы на борту присутствовала беcплатформенная инерциальная навигационная система. Для обеспечения данной функции рационально использовать имеющиеся в продаже модули с совмещенными устройствами, такими, как гироскоп, акселерометр, магнитный компас. Существует несколько разновидностей данных модулей.

В нашем случае удобно использовать модуль GY-85, который имеет малые габариты, интерфейс связи с другими устройствами I2C, и имеет гироскоп, акселерометр и магнитный компас на одной плате.

№ п/п ; Характеристика ; Значение ;
1 ; Напряжение питания; 3-5 V;
2 ; Интерфейс; I2C;
3 ; Диапазон измерения акселерометра; +/-2G, +/-4G, +/-8G, +/-16G;
4 ; Диапазон измерения гироскопа; +/-250, +/-500, +/-1000, +/-2000dps;
5 ; Диапазон измерения компаса магнитометра; +/-4800uF;
6 ; Буфер; FIFO 512B;
7 ; Размер; 15х25мм;

2. Серво-привод наклона головы.
Для того, чтобы робот мог выражать эмоции с помощью жестов, в числе действий по переоборудованию робота присутствует установка серво-привода наклона головы (вперед и назад).

Выбранный серво-привод AS3103PG обладает следующими характеристиками (приведены в 
/таблице характеристики серво-приводов/):

№ п/п ; Характеристика ; Значение ;
1 ; Угол вращения ; 180 градусов;
2 ; Вес ; 38г;
3 ; Длина провода ; 320мм;
4 ; Скорость ; 0.22 сек/60 градусов (4.8 В), 0.19 сек/60 градусов (6 В);
5 ; Крутящий момент ; 5кг*см (4.8 В), 5.5кг*см (6 В);
6 ; Напряжение ; 4.8В - 6В;

что вполне удовлетворяет предъявляемым требованиям, необходимым для наклона головы.

3. Серво-приводы кистей рук.
У промобота была задумана, но не реализована функциональность захвата предметов с помощью кистей рук. Для этого на руках робота имеются приспособления, которые предназначены для захвата предметов. Для того, чтобы реализовать эту функциональность, будут установлены серво-приводы, и рычаги, связывающие серво-привод с кистью.

4. Дисплей.
Для отображения всего спектра эмоций, которые будет способен "ощущать" робот, было принято решение об установке дисплея в голову роботу. При настройке системы дисплей будет выполнять функцию монитора компьютера, а при работе робота будет отображать лицо, и отражать эмоции на нем. Для этой задачи был выбран дисплей Skylarpu диагональю 9 дюймов, питающийся от 5V и имеющий интерфейс связи с компьютером HDMI.

/таблица характеристики дисплея/
№ п/п ; Характеристика ; Значение ;
1 ; Размер экрана ; 9 Дюймов;
2 ; Разрешение ; 800 * 480px;
3 ; Формат ; 16:9;
4 ; Напряжение питания ; 3.3/10.4/17.0/-5.0V (DVDD/AVDD/AVDD/VGL);
5 ; Ток питания ;  0.3/0.3mA (IGH/IGL);
6 ; Интерфейс ; VGA, HDMI;

5. Датчики расстояния.
Для корректного позиционирования робота внутри помещения было принято решение заменить имеющиеся парктроники на ультрозвуковые датчики расстояния. Для измерения расстояния до объектов будет установлено 5 датчиков, и еще 1 для измерения расстояния до собеседника робота (будет установлен в голове). Выбранные датчики имеют больший диапазон измеряемых расстояний, чем уже имеющиеся парктроники, и имеют гораздо более низкую стоимость.

/таблица характеристики датчиков расстояния/
№ п/п ; Характеристика ; Значение ;
1 ; Напряжение питания ; 5 В;
2 ; Потребление в режиме тишины ; 2 мА;
3 ; Потребление при работе ; 15 мА;
4 ; Диапазон расстояний ; 2–400 см;
5 ; Эффективный угол наблюдения ; 15°;
6 ; Рабочий угол наблюдения ; 30°;

6. Реле.
Для корректного управления цепями нагрузок было решено использовать модули реле. Они позволяют включать и выключать цепи потребителей, когда это требуется, а также имеют гальваническую развязку между управляющей и силовой частями.

/таблица характериситики модуля реле/
№ п/п ; Характеристика ; Значение ;
1 ; Количество каналов ; 4;
2 ; Рабочее напряжение ; 5V;
3 ; Ток силовой части ; 10A;

7. Светотехника.
Модули светотехники представляют собой 8 светодиодных ламп с напряжением питания 12V. Белые устанавливаются на передней части робота, красные - на задней.

===Обзор достоинств и недостатков существующих решений===

Имеющиеся оборудование обладает многими характеристиками, в том числе различными свойствами, и способами работы. В числе недостатков причутствуют различные неприятные особенности, а в числе достоинств - приятные.

1. БИНС. Необходима для стабилизации курса робота.
Устройство - какое-то мы выбрали выше

/таблица плюсы/минусы модуля гироскопа/
№ п/п ; Плюсы ; Минусы ;
1 ; низкая цена ; дрейф показаний;
2 ; малые габариты ; взаимное влияние осей датчика;
3 ; удобство работы ; напяжение питания влияет на чувствительность;
4 ; - ; геометрические центры различных датчиков не совпадают;

2. Серво-привод наклона головы. Нужен для расширения возможностей эмоционального взаимодействия с человеком.

/таблица плюсы/минусы серво-привода головы/
№ п/п ; Плюсы ; Минусы ;
1 ; низкая цена ; джиттер (вибрация);
2 ; малое энергопотребление ; малый крутящий момент;
2 ; низкий уровень аккустического шума ; малая износостойкость шестерней;

3. Серво-приводы кистей рук. Также необходимы для расширения возможностей эмоционального взаимодействия с человеком.

/таблица плюсы/минусы серво-приводов кистей рук/
№ п/п ; Плюсы ; Минусы ;
1 ; низкая цена ; джиттер (вибрация);
2 ; малое энергопотребление ; малый крутящий момент;
2 ; низкий уровень аккустического шума ; малая износостойкость шестерней;

4. Дисплей. Служит также для расширения возможностей эмоционального взаимодействия с человеком.

/таблица плюсы/минусы дисплея/
№ п/п ; Плюсы ; Минусы;
1 ; низкая цена ; отсутствует тачскрин;
1 ; диагональ экрана соответствует размерам головы; неудобное расположение платы управления (приклеена на 2-ух сторонний скотч);

5. Датчики расстояния. Должны быть заменены для соответствия заявленным требованиям по ориентированию робота.

/таблица плюсы/минусы датчиков расстояния/
№ п/п ; Плюсы ; Минусы ;
1 ; низкая цена ; взаимовлияние датчиков друг на друга;
1 ; простое подключение ; низкая уголовая (15˚) разрешающая способность;
1 ; простое управление ; многократное отражение сигнала;

6. Реле. Должны быть использованы для корректного управления цепями нагрузки.

/таблица плюсы/минусы модулей реле/
№ п/п ; Плюсы ; Минусы ;
1 ; низкая цена ; низкая надежность;
1 ; гальваническая развязка цепей ; шумность работы;
1 ; индикация состояния ; - ;

7. Светотехника. Должна быть установлена для предупреждения окружающих о намерении робота совершить движение, и для диагностики неполадок.

/таблица плюсы/минусы светотехники/
№ п/п ; Плюсы ; Минусы ;
1 ; низкое энергопотребление ; малая яркость;
1 ; простое крепление и подключение ; высокая цена;

===Вывод===
В результате анализа вышеприведённых характеристик можно сделать вывод о том, что, несмотря на наличие некоторых недостатков, рассматриваемое оборудование может быть использовано для изготовления андроидного робота. Таким образом, можно заключить, что выбор компонентов был произведен верно. Описанная выше система является частью мобильной платформы и была использована для обучения студентов по дисциплинам «Основы обработки изображений», «Нейронные сети» и «Нечеткая логика». Использование показало высокую эффективность предложенной системы, отсутствие сбоев во время работы и заинтересованность студентов в процессе обучения.
Данная система может быть использована для проведения исследований и опытно-конструкторских работ в области робототехники, разработки автономных исследовательских систем и систем автоматического управления, а также для проведения практических занятий со студентами, бакалаврами и магистрантами соответствующих направлений.

==Конструкторская часть==

===Проектирование схемотехнических решений===

В состав системы управления платформы-робота обычно входят датчики для получения данных об окружающей обстановке и препятствиях, которые представлены ультразвуковыми дальномероми, гироскопом, акселерометром и т.д.. Для нормализации сигналов с этих датчиков служат преобразователи, осуществляющие преобразование аналоговых сигналов в унифицированный сигнал.
Преобразование унифицированных сигналов выполняют входные порты МК. К портам МК подключаются аппаратные драйверы управления исполнительными двигателями, обеспечивающие согласование сигналов по уровню токов, и аппаратные и программные интерфейсы, обеспечивающие связь с бортовой ЭВМ.
Также существуют решения, не использующее МК, решающее задачу связи между датчиками и бортовой ЭВМ посредством преобразователей интерфейсов, являющееся альтернативным способом организации внутрисистемных интерфейсов.
В ходе проекта решена инженерная задача создания механических звеньев, обеспечивающих ожидаемые линейные скорости и ускорения, допустимые внешние нагрузки и режимы работы.
Функциональная особенность аппаратно-программного комплекса состоит в интеллектуализации управления движением за счет использования локальных и визуальных датчиков. Система имеет априорную информацию о среде и в процессе функционирования получает текущую информацию как о внешней среде, так и о собственном состоянии. Ее целью является принятие решений, связанных с анализом внешней среды.
На основе проведенного исследования предметной области и анализа наиболее часто используемых компонентов в системах такого рода был сделан вывод о допустимости и достаточности применения микроконтроллера в связке с ЭВМ.

Общая структурная схема андроидного робота представлена на рисунке /рисунок структурная схема робота/. Как можно видеть из этой схемы, робот состоит из модулей, связанных между собой различными интерфейсами связи, такими как: I2C (связь гироскопа и МК), RS485, UART, USB, HDMI, Bluetooth, и т.д..

[[Структурная_схема_робота.png]]

Согласно цели работы и данной структурной схемы необходимо разработать следующие блоки:
а) подсистема управления движением рук;
б) подсистема управления движением ног;
в) подсистема управления движением головы;
г) подсистема управления движением захватов кистей;
д) подсистема сбора информации с датчиков растояния;
е) подсистема управления курсом с помощью гироскопа;
ж) подсистема управления питанием бортовой ЭВМ;
з) подсистема управления устройствами ЧМИ.

=== Описание подсистемы управления движением рук ===

К функциям подсистемы управления движением рук относятся:
- поднять левую руку
- поднять правую руку
- опустить левую руку
- опустить правую руку

Аппаратное обеспечение
- микроконтроллер
- драйвер мотора левой руки
- драйвер мотора правой руки
- концевые выключатели левой руки
- концевые выключатели правой руки

Опишем подробнее вышеперечисленные функции.
Чтобы поднять левую руку, нужно выставить высокий уровень на входе драйвера двигателя постоянного тока, подать ШИМ сигнал на вход драйвера при незамкнутых концевых выключателях руки. Необходимо отметить, что для экономии входов микроконтроллера верхний и нижний уровень руки конролируется одним и тем же входом. Это требует выделения дополнительных состояний автомата управления движением рук.

Автомат состояний рук является конечным автоматом. В начале работы 
рук он находится в состоянии инициализации.

[[Исполнительные_механизмы_(схема_принципиальная).png]]

=== Описание подсистемы управления движением ног ===

К функциям подсистемы управления движением ног относятся:
- проехать вперед на Х метров
- остановиться
- проехать назад на Х метров

Аппаратное обеспечение
- микроконтроллер
- драйвер мотора левой ноги
- драйвер мотора правой ноги

Опишем вышеперечисленные функции подробнее.
Для подсистемы управления движением ног определены следующие команды:
- 20: вернуть состояние подсистемы;
- 21 L C: движение вперед на L метров курсом C;
- 22 L C: движение назад на L метров курсом C;
- 23 : остановка.

Пример обмена командами:

21 320 200 // движение вперед на 320 см курсом 200
           // относительно начального положения робота
legs_last_cmd: 21, state: 1 // ответ подсистемы
           // с последней командой и состоянием
20 // запрос состояния
legs_last_cmd: 20, avg_pwm: 120, state: 1, direction: 1, trg_course: 200, course: 202, tgr_distance: 320, distance: 140, lft_pwm: 90, rgt_pwm: 150

=== Описание подсистемы управления движением головы ===

[[Манипуляторные_устройства_(схема_принципиальная).png]]

Голова робота может двигаться в 2ух плоскостях. Для поворота в горизонтальной плоскости и для наклона головы используются серво-моторы.

К функциям подсистемы управления движением головы относятся:
- повернуть голову на Х градусов влево
- повернуть голову на Х градусов вправо
- наклонить голову на Х градусов вперед
- наклонить голову на Х градусов назад

Аппаратное обеспечение
- микроконтроллер
- серво-моторы
- интерфейсная шина I2C
- драйвер серво-моторов

=== Описание подсистемы управления движением захватов кистей ===

Для управления движением кистей рук используются серво-моторы.

К функциям подсистемы управления движением кистей рук относятся:
- сжать кисть левой руки
- сжать кисть правой руки
- отпустить кисть правой руки
- отпустить кисть левой руки

Аппаратное обеспечение
- микроконтроллер
- серво-моторы
- интерфейсная шина I2C
- драйвер серво-моторов

=== Описание подсистемы сбора информации с датчиков растояния ===

[[Датчики.png]]

Сбор информации с датчиков происходит по прерываниям. 

=== Описание подсистемы управления курсом с помощью гироскопа ===

Для сбора информации с гироскопа применяется шина I2C, и библиотека датчика GY_85. 
Сначала выполняется калибровка гироскопа, которая заключается в усреднении полученных значений для определения скорости дрейфа гироскопа.

[[Калибровка_гироскопа.png]]

Важнейшим режимом регулирования является «Режим поддержания скорости». При данном режиме мы управляем скоростью перемещения АРК путем регулирования силы тока, подаваемой на ходовой двигатель.
Данный режим активен во время непосредственного движения по ровной местности, в гору и при спуске с горы, при условии, что угол склона не превышает критического значения, когда управление двигателем уже неэффективно.

[[Регулятор_движения_с_заданной_скоростью.png]]

На рисунке //каком то// отражено функционирование данного режима.
В режиме движения робота с заданной скоростью задействованы следующие сигналы и функции:
t – время в с
s – комплексная переменная
Vц(t) – целевая скорость АРК в м/с
ωц(t) – целевая скорость вращения колес АРК в оборотах/с
ωр(t) – реальная скорость вращения колес АРК в оборотах/с
ε(t) – ошибка управления в оборотах/с
u(t) – сигнал управляющий двигателем
uм(t) – сигнал, являющийся результатом работы обмотки двигателя
Кдв – коэффициент усиления двигателя
Тм – механическая постоянная времени
Тэ – электрическая постоянная времени
Wpid(s) – передаточная функция ПИД-регулятора, отвечающая за
управление двигателем
функция 1 – математическое преобразование Vц(t) в ωк(t)
функция 2 – ПИД регулятор, формирующий u(t) исходя из ошибки
управления ε
функция 3 – апериодическое звено, отражающее электромагнитные
процессы в роторе и статоре двигателя
функция 4 – апериодическое звено, отражающее механические процессы в ходовом двигателе и трансмиссии АРК
Управляющее воздействие Vц(t) поступает в функцию No1, где из м/с
преобразуется в ωк(t) обороты/с, что позволяет использовать естественные
для данного процесса сигналы и единицы измерения. 37
Из результирующего сигнала ωк(t) вычитается сигнал ωр(t), являющийся результатом предыдущего цикла регулирования. В результате формируется сигнал ε(t), представляющий собой ошибку управления.
Функция No2 является ПИД-регулятором. ПИД-регулятор, на базе ошибки управления, формирует управляющий сигнал u(t), который воздействует на двигатель АРК.
Функции No3 и No4 отображают работу электропривода, служащего двигателем АРК. Они представляют собой 2 апериодических звена, которые под действием u(t) вырабатывают сигнал ωр(t) отражающий изменение оборотов двигателя во времени.
Рассмотрим объект управления, в роли которого выступает электропривод, служащий АРК ходовым двигателем.
В упрощенной схеме мы можем приближенно представить его в виде 2х апериодических звеньев, одно из которых отражает работу электромагнитных полей, а второе – механическую составляющую двигателя. При подаче тока на двигатель, сперва происходят процессы, связанные с электромагнитной составляющей привода, и лишь затем вступает в дело механика, что отображено на рисунке 27:

[[Упрощенная_схема_электропривода.png]]

Кдв – коэффициент усиления двигателя
Тм – механическая постоянная времени
Тэ – электрическая постоянная времени
функция 1 – апериодическое звено, отражающее электромагнитные
процессы в роторе и статоре двигателя
функция 2 – апериодическое звено, отражающее механические процессы в двигателе
Рассмотрим представленные величины более подробно.
Коэффициент усиления двигателя Kдв определяет пропорциональность между скоростью вращения вала двигателя на холостых оборотах и поданным на вход напряжением. Таким образом он находится по формуле 10:

[[Формула_10.png]]

Скорость холостого хода ωхх в оборотах в секунду и Uн задаются в паспорте электродвигателя (номинальное рабочее напряжение). В том случае, если мы не знаем ωхх, она находится экспериментально. Для этого на двигатель подают максимальное напряжение и снимают скорость вращения вала датчиком.

[[График_апериодического_звена.png]]

Рисунок 28 – График апериодического звена
Механическая постоянная времени Tм зависит, как следует, от инерции всех механических частей входящих в электропривод. Так как в большинстве случаев это не только детали самого электропривода, но и редуктор, внешняя нагрузка и т.д., то проще всего получит Тм экспериментальным способом.
 
Для этого на электропривод скачком подают максимальное напряжение, снимая при этом переходной процесс изменения скорости ω(t).
При этом получают график, показанный на рисунке 28.
По данному графику можно определить время регулирования tП, это время, когда отклонение от целевого значения не превышает 5%, и, как результат, переходной процесс можно считать оконченным.
Если считать влияние первого звена незначительным, в связи с тем, что в электроприводе с механической нагрузкой влияние Тэ, как правило в 10 раз меньше, то можно принять Tм как Т данного переходного процесса.
Учитывая, что T переходного процесса в 3 раза меньше tП, получим формулу 11:

[[Формула_11.png]]
 
Следовательно, если мы построим график переходного процесса, то сможем найти Тм.
Электрическая постоянная времени Тэ характеризует инерционность намагничивания якоря двигателя, и ее можно найти по формуле 12:

[[Формула_12.png]]

где Lя – это индуктивность якоря двигателя, а Rя – это его сопротивление, но в практических условиях измерить Lя бывает крайне сложно, тогда используется приближение, отраженное в формуле 13:

[[Формула_13.png]]

Передаточной же функцией, записанной, через оператор Лапласа, нашего объекта управления будет формула 14:

[[Формула_14.png]]

Следует учесть, что при регулировании нам будут нужны не только текущие показатели АРК, но также и показатели на предыдущем этапе регулирования.

=== Описание подсистемы управления питанием бортовых устройств===

[[Система_питания.png]]

К функциям подсистемы управления питанием бортовой ЭВМ относятся:
- включить питание
- замкнуть кнопку включения питания ЭВМ

Аппаратное обеспечение
- микроконтроллер
- модули реле
- бортовая ЭВМ
- блок питания бортовой ЭВМ

При включении питания микроконтроллера после инициализации всех подключенных устройств, выставляется низкий уровень на выходе, отвечающем за подачу питания на бортовую ЭВМ (низкий уровень сигнала замыкает реле), и на 100 мс замыкается цепь кнопки включения бортовой ЭВМ.

=== Описание подсистемы управления устройствами ЧМИ ===

[[Устройства_ЧМВ.png]]

К устройствам ЧМИ относятся дисплей, камеры, микрофон, динамики.

К функциям подсистемы управления устройствами ЧМИ относятся:
- включить дисплей
- включить камеры
- включить микрофон
- включить динамики

Аппаратное обеспечение
- микроконтроллер
- модули реле
- камеры 
- микрофон
- дисплей
- динамики

===Проектирование ПО микроконтроллера===

Ниже представлены автоматы и алгоритмы работы подсистем робота.

====Автомат рук====

[[Автомат_рук.png]]

Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "инициально опустить руки".При пребывании автомата в состоянии "инициально опустить руки" в момент времени 1 имея на входе воздействие "нажат к.в.", автомат сменит состояние на "остановка".При пребывании автомата в состоянии "начать движ. вниз" в момент времени 2 имея на входе воздействие "время больше 10 сек", автомат сменит состояние на "ошибка".При пребывании автомата в состоянии "начать движ. вниз" в момент времени 3 имея на входе воздействие "к.в. отпущен", автомат сменит состояние на "продолжить опускать руки".В момент времени 4 автомат перешел в состояние "продолжить опускать руки", и входное воздействие равно "время больше 10 сек", то он перейдет в состояние "ошибка".
Если в момент времени 5 автомат находится в состоянии "продолжить опускать руки" при входном воздействии "к.в. нажат", то он перейдёт в состояние "остановка".В момент времени 6 робот находится в состоянии "начать движ. вверх", и при входном воздействии "время больше 10 сек", он переходит в состояние "ошибка".В момент времени 7 робот находится в состоянии "начать движ. вверх", и при входном воздействии "к.в. отпущен", он переходит в состояние "продолжить поднимать руки".Если в момент времени 8 автомат находится в состоянии "продолжить поднимать руки" при входном воздействии "время больше 10 сек", то он перейдёт в состояние "ошибка".В момент времени 9 автомат перешел в состояние "продолжить поднимать руки", и входное воздействие равно "к.в. нажат", то он перейдет в состояние "остановка".
В момент 10 автомат пребывает в состоянии "остановка", и, получив воздействие "0", он перейдет в состояние "ожидание".При пребывании автомата в состоянии "ожидание" в момент времени 11 имея на входе воздействие "принята команда вниз", автомат сменит состояние на "начать движ. вниз".Если автомат в момент 12 находится в состоянии "ожидание", а входное воздействие равно "принята команда вверх", то следующее состояние будет равно "начать движ. вверх".

====Автомат_Голова====

[[Автомат_Голова.png]]

Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "установка в начальное положение".Если в момент времени 1 автомат находится в состоянии "установка в начальное положение" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "начальное положение установлено".При пребывании автомата в состоянии "начальное положение установлено" в момент времени 2 имея на входе воздействие "угол меньше требуемый", автомат сменит состояние на "поворот на Х градусов в горизонтальной плоскости".Если в момент времени 3 автомат находится в состоянии "начальное положение установлено" при входном воздействии "угол меньше требуемый", то он перейдёт в состояние "поворот на Х градусов в вертикальной плоскости".
В момент времени 4 робот находится в состоянии "поворот на Х градусов в горизонтальной плоскости", и при входном воздействии "требуемый угол достигнут", он переходит в состояние "поворот завершен".Если в момент времени 5 автомат находится в состоянии "поворот на Х градусов в вертикальной плоскости" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "поворот завершен".При пребывании автомата в состоянии "поворот на Х градусов в вертикальной плоскости" в момент времени 6 имея на входе воздействие "требуемый угол достигнут", автомат сменит состояние на "поворот завершен".Если в момент времени 7 автомат находится в состоянии "поворот на Х градусов в вертикальной плоскости" при входном воздействии "требуемый угол достигнут", то он перейдёт в состояние "поворот завершен".
====Автомат_Комп====
[[ Автомат_Комп.png ]]
Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "компьютер выключен".В момент времени 1 автомат перешел в состояние "компьютер выключен", и входное воздействие равно "0", то он перейдет в состояние "компьютер включается".В момент 2 автомат пребывает в состоянии "компьютер включается", и, получив воздействие "0", он перейдет в состояние "компьютер загружается".В момент времени 3 робот находится в состоянии "компьютер загружается", и при входном воздействии "получено подтверждающая последовательность", он переходит в состояние "компьютер загрузился".Если автомат в момент 4 находится в состоянии "компьютер загружается", а входное воздействие равно "превышено время ожидания", то следующее состояние будет равно "компьютер не загрузился".

====Автомат_Лампы====

[[Светотехника_(схема_принципиальная).png]]

[[ Автомат_Лампы.png ]]
Если автомат в момент 0 находится в состоянии "инициализация", а входное воздействие равно "0", то следующее состояние будет равно "выключить все лампы".В момент 1 автомат пребывает в состоянии "выключить все лампы", и, получив воздействие "получено подтверждение включения компьютера", он перейдет в состояние "включить белые лампы".В момент времени 2 робот находится в состоянии "выключить все лампы в качестве сигнала об ошибке", и при входном воздействии "не получено подтверждение включения компьютера за 10 сек.|счетчик включений меньше 5|счетчик времени включенных ламп меньше Х", он переходит в состояние "включить все лампы".В момент времени 3 автомат перешел в состояние "включить все лампы", и входное воздействие равно "счетчик времени выключенных ламп меньше Х", то он перейдет в состояние "выключить все лампы в качестве сигнала об ошибке".
При пребывании автомата в состоянии "включить все лампы" в момент времени 4 имея на входе воздействие "счетчик включений больше 5", автомат сменит состояние на "выключить все лампы".При пребывании автомата в состоянии "выключить все лампы" в момент времени 5 имея на входе воздействие "поехали вперед", автомат сменит состояние на "включить белые лампы".Если автомат в момент 6 находится в состоянии "выключить все лампы", а входное воздействие равно "поехали назад", то следующее состояние будет равно "включить красные лампы".При пребывании автомата в состоянии "включить белые лампы" в момент времени 7 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".
При пребывании автомата в состоянии "включить красные лампы" в момент времени 8 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".При пребывании автомата в состоянии "выключить все лампы" в момент времени 9 имея на входе воздействие "поехали вперед направо", автомат сменит состояние на "включить белую лампу справа".При пребывании автомата в состоянии "выключить все лампы" в момент времени 10 имея на входе воздействие "поехали назад направо", автомат сменит состояние на "включить красную лампу справа".В момент 11 автомат пребывает в состоянии "выключить все лампы", и, получив воздействие "поехали вперед налево", он перейдет в состояние "включить белую лампу слева".
Если автомат в момент 12 находится в состоянии "выключить все лампы", а входное воздействие равно "поехали назад налево", то следующее состояние будет равно "включить красную лампу слева".При пребывании автомата в состоянии "включить белую лампу справа" в момент времени 13 имея на входе воздействие "остановились", автомат сменит состояние на "выключить все лампы".В момент 14 автомат пребывает в состоянии "включить красную лампу справа", и, получив воздействие "остановились", он перейдет в состояние "выключить все лампы".

====Автомат_Обход препятствий====

[[Автомат_Обход_препятствий.png]]

Если автомат в момент 0 находится в состоянии "стоим", а входное воздействие равно "потребность", то следующее состояние будет равно "захотели ехать".Если автомат в момент 1 находится в состоянии "захотели ехать", а входное воздействие равно "нет_препятствий(прямо)", то следующее состояние будет равно "ехать прямо".В момент времени 2 робот находится в состоянии "захотели ехать", и при входном воздействии "нет препятствий справа", он переходит в состояние "ехать направо".Если автомат в момент 3 находится в состоянии "захотели ехать", а входное воздействие равно "нет препятствий слева", то следующее состояние будет равно "ехать налево".В момент 4 автомат пребывает в состоянии "ехать прямо", и, получив воздействие "нет препятствий справа", он перейдет в состояние "ехать направо".В момент 5 автомат пребывает в состоянии "ехать прямо", и, получив воздействие "нет препятствий слева", он перейдет в состояние "ехать налево".При пребывании автомата в состоянии "ехать направо" в момент времени 6 имея на входе воздействие "нет препятствий прямо", автомат сменит состояние на "ехать прямо".
Если в момент времени 7 автомат находится в состоянии "ехать налево" при входном воздействии "нет препятствий прямо", то он перейдёт в состояние "ехать прямо".

====Обработка датчиков расстояния====

[[Датчики.png]]

[[Датчики_расстояния.png]]

Ветка ожидание:
Блок 1: проверка состояния датчика расстояния.
Входы: состояние датчика
Выходы: направление дальнейшей работы (ожидание, триггер, эхо).

Блок 2: проверка времени ожидания.
Входы: время ожидания t (mс).
Выходы: если t больше 1000mc, то истина, иначе ложь

Блок 3: состояние датчика := триггер
Входы: переменная состояния
Выходы: состояние датчика

Ветка триггер:
Блок 4: проверка состояния триггера
Входы: состояние датчика
Выходы: фронт вниз; фронт вверх; ожидание;

Блок 5: проверка времени импульса
Входы: фронт вниз
Выходы: если время импульса больше 10 мс, то истина, иначе - ложь

Блок 6: выставить низкий уровень на выходе триггера
Входы: -
Выходы: состояние выхода триггера

Блок 7: состояние триггера := ожидание
Входы: -
Выходы: состояние триггера

Блок 8: состояние := эхо
Входы: -
Выходы: состояние датчика

Блок 9: выставить высокий уровень на выходе триггера
Входы: фронт вверх
Выходы: состояние выхода триггера

Блок 10: состояние триггера := фронт вниз
Входы: -
Выходы: состояние триггера

Блок 11: состояние триггера := фронт вверх
Входы: -
Выходы: состояние триггера

Ветка 3:
Блок 12: проверка состояния эхо
Входы: состояние датчика
Выходы: фронт вверх; фронт вниз; ожидание;

Блок 13: проверить уровень на входе эхо по фронту вверх
Входы: уровень
Выходы: если низкий, то истина, иначе - ложь

Блок 14: проверить уровень на входе эхо по фронту вниз
Входы: уровень
Выходы: если низкий, то истина, иначе - ложь

Блок 15: вычислить расстояние
Входы: длительность импульса
Выходы: расстояние

Блок 16: состояние эхо := фронт вниз
Входы: состояние эхо
Выходы: состояние эхо

Блок 17: запомнить момент прихода импульса
Входы: импульс
Выходы: время прихода импульса

Блок 18: состояние эхо := фронт вверх
Входы: состояние эхо
Выходы: состояние эхо

====Основной алгоритм программы микроконтроллера====

[[Основной_алгоритм.png]]

Блок 1: инициализация устройств и подсистем
Входы: -
Выходы: состояние портов ввода/вывода, вектора прерываний

Блок 2: основной управляющий алгоритм
Входы: состояние датчиков, команды о бортовой эвм
Выходы: управляющее воздействие, ответы о выполнении команд

====Инициализция устройств====

[[Инициализация.png]]

Блок 1:Инициализация последовательного порта
Входы: - 
Выходы: состояние последовательного порта (RX/TX), прерывания

Блок 2: Инициализация реле компьютера
Входы: -
Выходы: состояния пинов реле

Блок 3: Инициализация светотехники
Входы: -
Выходы: состояние пинов реле светотехники

Блок 4: Инициализация шины I2C 
Входы: -
Выходы: состояние шины I2C

Блок 5: Инициализация сети 5V
Входы:
Выходы: состояние пинов реле цепи 5V

Блок 6: Инициализация реле моторов и их включение
Входы:
Выходы: состояние пинов драйверов моторов

Блок 7: Инициализация таймеров
Входы:
Выходы: состояние регистров таймеров

Блок 8: Инициализация портов
Входы:
Выходы: состояние портов

Блок 9: Инициализация АЦП
Входы:
Выходы: состояние регистров АЦП

==== Обработчик прерывания по первому таймеру ====

[[Обработчик_прерывания_по_первому_таймеру.png]]

Блок 1: Сброс счетчика регистра прерываний
Входы: Счетчик
Выходы: Счетчик = 0

Блок 2: Обработка команд управления компьютером
Входы: Команда
Выходы:	Результат выполнения

Блок 3: Обработка команд управления светотехникой
Входы: Команда
Выходы:	Результат выполнения

Блок 4: Обработка команд управления руками
Входы: Команда
Выходы:	Результат выполнения

Блок 5: Обработка команд управления ногами
Входы: Команда
Выходы:	Результат выполнения

==== Обработчик прерывания по второму таймеру ====

[[Обработчик_прерывания_по_второму_таймеру.png]]

Блок 1: Сброс счетчика регистра прерываний
Входы: Счетчик
Выходы: Счетчик = 0

Блок 2: Счетчик импульсов датчиков расстояния += 1
Входы: Счетчик
Выходы: Значение счетчика, увеличенное на единицу

Блок 3: Обработка команд управления датчиками расстояния
Входы: Команда
Выходы:	Результат выполнения

==== Инициализация гироскопа (рассчет дрейфа) ====

[[Калибровка_гироскопа.png]]

Блок 1: Инициализация
Входы: Переменная суммы значений
Выходы: Переменная суммы значений

Блок 2: первичное измерение вращательного ускорения по оси z
Входы: переменная для хранения
Выходы: измеренное значение

Блок 3: инициализация цикла
Входы: переменная счетчик цикла
Выходы:	-

Блок 4: задержка 0.3 сек
Входы: счетчик задержки
Выходы: -

Блок 5: новое измерение ускорения по z
Входы: переменная для хранения значения
Выходы: значение

Блок 6: подсчет суммы измерений
Входы: переменная суммы
Выходы: значение суммы

Блок 7: конец цикла
Входы: -
Выходы: переменная счетчик

Блок 8: подсчет дрейфа
Входы: переменная для хранения значения дрейфа
Выходы: значение дрейфа

===Вывод===


- разработка ПО бортовой ЭВМ робота;
- разработка системы управления движением со стабилизацией по курсу, траектории, скорости;
- разработка системы управления «жестикуляцией» робота.

как собрано с фото
и все программы в том-же порядке, как в к-й части с теми же описаниями

==Технологическая часть==

===Изготовление и сборка схемотехнических решений===

Исходя из предложенного в разделе //структурная схема робота// деления блоков по выполняемым действиям и выдвинутых в разделе //Требования// требований была разработана принципиальная электрическая схема андроидного робота. Она показана на рисунке //рисунок//.

[[Принципиальная_схема_робота.png]]

Для удобства дальнейшего описания разберём отдельные подсистемы робота. 
В их число входят:

а) подсистема управления движением рук;
б) подсистема управления движением ног;
в) подсистема управления движением головы;
г) подсистема управления движением захватов кистей;
д) подсистема сбора информации с датчиков растояния;
е) подсистема управления курсом с помощью гироскопа;
ж) подсистема управления питанием бортовой ЭВМ;
з) подсистема управления устройствами ЧМИ.

[[Устройства_ЧМВ_(схема_принципиальная).png]]

Для разработки аппаратной части использовались плата arduino с микроконтроллером Atmega 2560, гироскоп, акселерометр, плата драйверов двигателя, блок реле, ультразвуковые датчики измерители расстояния, преобразователь интерфейсов USART → rs485 → USB, серво-моторы, электродвигатели постоянного тока и другие компоненты. Также в системе присутствует бортовая ЭВМ для выполнения части (какой?) функций робота.
Для разработки программной системы использовался язык программирования C и библиотеки Arduino.

===Разработка ПО микроконтроллера===

В качестве приводов рук и ног используются электродвигатели постоянного тока от сткелоподъемников ВАЗ 2110. Эти двигатели (см рис //двигатели//) обладают большим крутящим моментом, достаточным для поворота рук и перемещения робота. Скорость вращения двигателей может изменяться под действием ШИМ-сигнала. Направление вращения задается полярностью подключения. Таким образом, для управления этим двигателем идеально подходит плата VNH5019A. Это сдвоенный мостовой драйвер, предназначенный для управления электродвигателями постоянного тока. ИМС имеет возможность управления выходными цепями с помощью ШИМ-сигнала. Схема включения – типовая, взята из официальной документации.
Одна микросхема VNH5019A предоставляет два независимых «мостовых» выхода или четыре обычных силовых выхода нагрузочной способностью до 30 ампер при напряжении до 50 вольт. Это больше, чем требуется, и опыту практического применения этой микросхемы сказать, что она выдерживает токи до 30 ампер на канал без каких-либо последствий при наличии качественного охлаждения. В схеме блока применены две такие микросхемы; таким образом, число силовых выходов может варьироваться от четырех до восьми.
Каждый из мостовых выходов VNH5019A имеет возможность измерения величины проходящего через него постоянного тока за счет наличия вывода ― Current sensing A/B‖. Технически это общая точка драйверов обоих полумостов канала, которая должна подключаться к общему проводу силового питания через токовый шунт или напрямую, если измерение тока не требуется.
Для защиты силовых выходов от всплесков ЭДС самоиндукции при коммутации индуктивной нагрузки каждый из восьми выходов подключен к средней точке пары диодов, включенных последовательно между цепями силового питания ИМС; таким образом, выброс напряжения любой полярности извне блока будет выровнен по величине с соответствующим уровнем питающих цепей и не будет представлять угрозы для ИМС.
К каждому из восьми управляющих входов ИМС подключен индикаторный светодиод для отображения текущего состояния выхода.

[[Внешний_вид_VNH5019A.jpg]]

[[Двигатели_установленные_в_робота.png]]

Плата arduino с микроконтроллером Atmega 2560.
В качестве управляющего микроконтроллера был использован МК Atmega2560 (рисунок //arduino//). Это высокопроизводительный (до 16 MIPS) малопотребляющий микроконтроллер с разрядностью 8 бит и RISC - архитектурой. Он имеет два 8-битных и четыре 16-битных таймера-счетчика, которые могут генерировать ШИМ-сигнал на соответствующих выводах микроконтроллера. Tакже имеются 16 каналов АЦП разрядностью 10 бит, модули TWI и UART, 16 входов внешних прерываний. Выбор именно Atmega2560 обусловлен тем, что для работы всех устройств необходимо большое количество входов и выходов, что как раз и отличает этот контроллер от, например, Atmega328 и др. подобных. Общее количество GPIO-выводов МК равняется 64, что за вычетом выводов, занятых различными интерфейсами, вполне достаточно для обеспечения управляющими сигналами внешних устройств.

[[Внешний_вид_МК_Atmega2560.jpg]]

Внешний вид гироскопа представлен на рисунке 

[[Внешний_вид_гироскоп.jpg]]

Плата гироскопа с микросхемой MPU5060 удовлетворяет требованиям, предъявляемым к модулю, а именно наличие гироскопа, акселерометра и магнитного компаса в составе единого устройства с интерфейсом I2C.

Блок реле
Блок реле присутствует и представляет из себя плату, на которой размещены 4 реле марки Китай, 4 блока оптической развязки (гальванической), управляющие входы, управляющиеся инверсным сигналом и индикаторные светодиоды, которые показывают состояние реле.

Ультразвуковые датчики измерители расстояния
В системе используются ультразвуковые измерители расстояния HC-SR04. Их выбор обусловлен простотой работы с протоколом, который они используют.

Преобразователь интерфейсов USART → rs485 → USB
Для обеспечения связи между бортовой ЭВМ и контроллером используется шина rs485, и, соответственно, преобразователь интерфейсов. Он содержит в себе контроллер USB, микросхему MAX485, и микросхему для работы с USART. Его применение обусловлено необходимостью создания единой ЛВС робота, в которую входят все бортовые устройства.

===Разработка ПО бортовой ЭВМ робота===

// Генератор бреда из отчета по Кузнецову !!

===Разработка системы управления движением===

Для получения более точных данных о параметрах движения, при включении робота выполняется калибровка гироскопа.

[[Калибровка_гироскопа.png]]

Пример кода калибровки представлен ниже:
begin;

S = 0;
old_z = гироскоп(z);
for (i=0; i  10; i++)
{
  задержка 0.3 сек;
  new_z = гироскоп(z);
  S = S + (new_z - old_z);
}
дрейф = S / 10;

end;

Согласно описанному в конструкторской части ПИД регулятору, был написан код регулирования курса, траектории и скорости.
Код ПИД-регулятора обеспечения режима движения робота с заданной скоростью:

begin;

gz += (гироскоп(z) - дрейф) * dt;
z = команда(курс);
левый(Sц + Kp * atan(z - gz));
правый(Sц - Kp * atan(z - gz));

delay(dt * 1000)

end;

===Разработка системы управления «жестикуляцией» робота===

Код автомата рук и сервоприводов.

Согласно приведенному в конструкторской части автомату, был реализован конечный автомат рук, для управления руками.

[[Код_автомата_управления_руками.png]]

==Информационная безопасность==

1. Определение класса АС
Определим класс нашей системы, основываясь на руководящем документе "Классификация АС и требования по защите от несанкционированного доступа к информации".
Предлагаемая система предназначена для общения с людьми и привлечения внимания к Университету.
Система имеет следующие возможности:
передвижение в автоматическом и/или дистанционно-управляемом режимах с требуемой скоростью и точностью по заданному маршруту,
имитирование человеческих эмоций
реагирование на раздражители
поддержание разговора - распознавать речь и отвечать на вопросы.
1.1 Анализ исходных данных
Таблица 1 перечень защищаемых информационных ресурсов АС и их уровень конфиденциальности
1. модель распознавания речи; секретная информация
2. модель синтеза речи; секретная информация
3. прошивка контроллера; внутренняя информация
4. настройки операционной системы; внутренняя информация
5. файлы исходного кода приложения для управления исполнительными механизмами; внутренняя информация
6. файлы исходного кода приложения для управления эмоциями и рефлексами; конфиденциальная информация
7. база знаний; секретная информация
8. база данных эмоций и рефлексов; секретная информация
9. база данных голосвых записей для воспроизведения речи; конфиденциальная информация
10. интерфейс пользователя; открытая информация
11. речевое API; открытая информация
Таблица 2 перечень лиц, имеющих доступ к штатным средствам АС, с указанием их уровня полномочий
1. Администратор; доступ к секретной информации;
2. Разработчик; доступ к секретной информации;
3. Тестировщик; доступ к внутренней информации;
4. Пользователь-собеседник; доступ к открытой информации.
Таблица 3 матрица доступа или полномочий субъектов доступа по отношению к защищаемым информационным ресурсам АС
; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10; 11
1. Администратор ; + ; + ; + ; + ; + ; + ; + ; + ; + ; + ; +
2. Разработчик ; + ; + ; + ; + ; + ; + ; + ; + ; + ; + ; +
3. Тестировщик ; - ; - ; + ; + ; + ; - ; - ; - ; - ; + ; +
4. Cобеседник ; - ; - ; - ; - ; - ; - ; - ; - ; - ; + ; +
Режим обработки данных в АС
Работы с системой могут производиться одновременно только одним человеком, следовательно режим обработки данных является индивидуальным.
1.2 выявление основных признаков АС, необходимых для классификации
наличие в АС информации различного уровня конфиденциальности; +
уровень полномочий субъектов доступа АС на доступ к конфиденциальной информации; +
режим обработки данных в АС; индивидуальный
1.3 сравнение выявленных признаков АС с классифицируемыми
Устанавливается девять классов защищенности АС от НСД к информации.
Каждый класс характеризуется определенной минимальной
совокупностью требований по защите.
Классы подразделяются на три группы, отличающиеся особенностями
обработки информации в АС.
В пределах каждой группы соблюдается иерархия требований по защите в
зависимости от ценности (конфиденциальности) информации и,
следовательно, иерархия классов защищенности АС.
Третья группа включает АС, в которых работает один пользователь,
допущенный ко всей информации АС, размещенной на носителях одного
уровня конфиденциальности. Группа содержит два класса - 3Б и 3А.
Вторая группа включает АС, в которых пользователи имеют одинаковые
права доступа (полномочия) ко всей информации АС, обрабатываемой и
(или) хранимой на носителях различного уровня конфиденциальности.
Группа содержит два класса - 2Б и 2А.
Первая группа включает многопользовательские АС, в которых
одновременно обрабатывается и (или) хранится информация разных уровней
конфиденциальности. Не все пользователи имеют право доступа ко всей
информации АС. Группа содержит пять классов - 1Д, 1Г, 1В, 1Б и 1А.
1.4 присвоение АС соответствующего класса защиты информации от НСД
На основе анализа исходных данных, можно сделать вывод, что разрабатываемая система относится к первой группе АС, и классу защищенноcти 1Д.
1.5 Требования к подсистемам класса защищенности 1Д
В общем случае, комплекс программно-технических средств и
организационных (процедурных) решений по защите информации от НСД
реализуется в рамках системы защиты информации от НСД (СЗИ НСД),
условно состоящей из следующих четырех подсистем:
- управления доступом;
- регистрации и учета;
- криптографической;
- обеспечения целостности.
Технические характеристики робота:
- Микроконтроллер (Arduino 2560)
- Платы расширения (модули реле, Н-моста, БИНС, серво-приводы, электродвигатели, провода, ультразвуковые датчики расстояния, камеры, и т.д.)
- Бортовая ЭВМ, ОС - Debian 8
Требования к классу защищенности 1Д:
Подсистема управления доступом:
Идентификация и проверка подлинности таких субъектов как: администратор
ктото еще осуществляется средствами операционной систмы. Доступ возможен
а) через ssh по сети
Ssh - сетевой протокол прикладного уровня, позволяющий производить удалённое управление операционной системой и туннелирование TCP-соединений (например, для передачи файлов). Схож по функциональности с протоколами Telnet и rlogin, но, в отличие от них, шифрует весь трафик, включая и передаваемые пароли. SSH допускает выбор различных алгоритмов шифрования. SSH-клиенты и SSH-серверы доступны для большинства сетевых операционных систем.
б) локально, через gdm
Gdm - графический дисплейный менеджер для X Window System. Эта программа регистрирует пользователей в операционной системе, предлагая им ввести их логин и пароль. GDM также позволяет выбирать графическую среду (сеанс) и локаль (набор языковых и региональных настроек).Экран приветствия GDM может иметь разный вид в зависимости от применённой к нему темы.
Идентификация и проверка подлинности пользователей-собеседников осущестляется
визуально при помощи системы распознавания лиц и голоса.
Подсистема регистрации и учета:
Регистрация факта входа всех пользователей, кроме собеседников осущестляется средствами
ОС в файле /var/log/auth.log, а остальных - в журналах программы.
Регистрация выхода из системы или останова не проводится в моменты аппаратурного отключения
АС. В параметрах регистрации указываются:
- дата и время входа (выхода) субъекта доступа в систему (из системы) или
загрузки (останова) системы;
- результат попытки входа: успешная или неуспешная -
несанкционированная;
- идентификатор (код или фамилия) субъекта, предъявленный при попытке
доступа;
Подсистема обеспечения целостности:
Целостность программных средств СЗИ НСД достигается за счет
подключения файловой системы /usr в режиме "только для чтения"
командой mount /dev/{device}/ /home/{directory}
Целостность обрабатываемой информации обеспечивается
с помощью исключения взаимодействия пользователя-собеседника
непосредственно с операционной системой в обход программного
обеспечения посредством визуального интерфейса.
Неизменность программной среды при работе пользователя-собеседника
обеспечивается настройкой прав доступа на каталоги программы и ее модулей
средствами Linux командой chmod -X {directory}/.
При этом:
- целостность СЗИ НСД проверяется при загрузке системы по контрольным
хэшам компонент СЗИ запуском скрипта rc.local. Используются хэши
sha256. Хэши компонент хранятся в файловой системе /var/hashes,
которая отключается из системы после проверки. Т.о. злоумышленник
не может подменить или рассчитать коллизии хэшей.
- целостность программной среды обеспечивается использованием
трансляторов с языков высокого уровня и отсутствием средств модификации
объектного кода программ в процессе обработки и (или) хранения
защищаемой информации;
- физическая охрана СВТ робота, предусматривающая контроль доступа к ним
посторонних лиц, осуществляется самим роботом, так как он оборудован руками и клешнями,
и может произвести самозащиту в случае опасности;
- периодическое тестирование функций СЗИ НСД при
изменении программной среды и персонала АС с помощью тест - программ,
имитирующих попытки НСД производится;
- имеются средства восстановления СЗИ НСД, предусматривающие ведение
двух копий программных средств СЗИ НСД и их периодическое обновление и контроль работоспособности. Резервное копирование выполняется с помощью планировщика задач cron и скриптов на языке shell.

==Список литературы==
1 КХ. Кондратьев К.Л., проф. Харитонов В.И. Аппаратно-программный комплекс для управления платформой-роботом // Известия МГТУ «МАМИ». - 2014. - №No 2(20).
2 МСЛ. Михед А.Д., Смирнова Е.Е., Липатова Ю.В. Моделирование манипулятора кисти андроида // Известия ТулГУ. Технические науки.. - 2016. - №11. Ч. 2.
3 ККЮ. Колыванов К.Ю. Перспективы мобильной робототехники // Северо-Казахстанский государственный университет им. М. Козыбаева. - 2016.
4 ШВК. Шилов М.М., Воробьёва О.С., Кракау Т.К. Применение систем технического зрения и средств нечётких вычислений в интеллектуальных устройствах автоматики и робототехники // Научно-технические ведомости СПбГТУ. - 2010. - №2.
5 СЗ. Саяпин А.В., Зотин А.Г. Система управления движением автономной колесной платформы // Решетневские чтения. - 2015.
6. Описание интерфейсной шины I2C протокола передачи данных по ней // URL: http://easyelectronics.ru/interface-bus-iic-i2c.html (дата обращения: 28.10.2017).
7. Инерциальная навигационная система // URL: www.nngasu.ru/geodesy/classification/chastnye-klassifikatsii/11_Inercialnie_sistemi.php (дата обращения: 10.07.2017).
8. Описание библиотеки и примеры работы с платой GY-85 // URL: https://github.com/madc/GY-85 (дата обращения: 17.09.2017).
9. Анишин Н.С., Булатникова И.Н., Гершунина Н.Н. Алгоритмические проблемы применения микропроцессорных средств в робототехнике // Известия ТРТУ Тематический выпуск Компьютерные технологии в инженерной и управленческой деятельности. - 2008. - №3.
